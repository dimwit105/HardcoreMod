package com.blaxout1213.entity;

import net.minecraft.entity.Entity;
import net.minecraft.entity.SharedMonsterAttributes;
import net.minecraft.entity.ai.EntityAIAttackOnCollide;
import net.minecraft.entity.ai.EntityAINearestAttackableTarget;
import net.minecraft.entity.ai.EntityAISwimming;
import net.minecraft.entity.ai.EntityAIWander;
import net.minecraft.entity.ai.EntityAIWatchClosest;
import net.minecraft.entity.monster.EntityMob;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.ChatComponentTranslation;
import net.minecraft.world.World;

public class EntityDovahkiin extends EntityMob
{

	public EntityDovahkiin(World w) 
	{
		super(w);
        this.getNavigator().setAvoidsWater(true);
        this.getNavigator().setBreakDoors(true);
        this.tasks.addTask(0, new EntityAISwimming(this));
        this.tasks.addTask(7, new EntityAIWander(this, 1.0D));
        this.tasks.addTask(8, new EntityAIWatchClosest(this, EntityPlayer.class, 8.0F));
        this.tasks.addTask(2, new EntityAIAttackOnCollide(this, EntityPlayer.class, 1.0D, true));
        this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, 0, false));
        this.setSize(0.6F, 1.8F);
        this.setCanPickUpLoot(true);
	}
    protected void applyEntityAttributes()
    {
        super.applyEntityAttributes();
        this.getEntityAttribute(SharedMonsterAttributes.followRange).setBaseValue(64.0D);
        this.getEntityAttribute(SharedMonsterAttributes.movementSpeed).setBaseValue(0.33D);
        this.getEntityAttribute(SharedMonsterAttributes.attackDamage).setBaseValue(1.0D);
    }
    public boolean attackEntityAsMob(Entity e)
    {
    	float angle = this.rotationYaw % 360;
    	if(super.attackEntityAsMob(e) && e instanceof EntityPlayer)
    	{
    		EntityPlayer ep = (EntityPlayer) e;
    		double x = (3 * angle) / 180;
    		double z = 3 - x;
    		if(x < 0)
    		{
    			z = -3 + x;
    		}
    		ep.addChatComponentMessage(new ChatComponentTranslation("X / Z: " + x + ", " + z, new Object[0]));
    		e.motionX = x;
    		e.motionZ = z;
    		return true;
    	}
    	else
    	{
    		return false;
    	}
    }
    private int getDirection(float angle)
    {
    	return (int) ((angle));
    }
    protected boolean isAIEnabled()
    {
        return true;
    }
}
